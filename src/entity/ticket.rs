//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ticket")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub ticket_id: i32,
    pub user_id: i32,
    pub event_id: i32,
    pub header: String,
    pub description: String,
    pub price: i32,
    pub quantity: i32,
    pub requires_membership: i8,
    pub association: String,
    pub is_selling: i8,
    pub created_at: DateTimeUtc,
    pub updated_at: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::event::Entity",
        from = "Column::EventId",
        to = "super::event::Column::EventId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Event,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::UserId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    User,
}

impl Related<super::event::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Event.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
